// This file is generated by Simplicity Studio.  Please do not edit manually.
//
//

// Enclosing macro to prevent multiple inclusion
#ifndef __AF_GEN_EVENT__
#define __AF_GEN_EVENT__


// Code used to configure the cluster event mechanism
#define EMBER_AF_GENERATED_EVENT_CODE \
  EmberEventControl emberAfIdentifyClusterServerTickCallbackControl1; \
  EmberEventControl emberAfTimeClusterServerTickCallbackControl1; \
  EmberEventControl emberAfOtaBootloadClusterClientTickCallbackControl1; \
  EmberEventControl emberAfIdentifyClusterServerTickCallbackControl2; \
  EmberEventControl emberAfIdentifyClusterServerTickCallbackControl10; \
  EmberEventControl emberAfTimeClusterServerTickCallbackControl10; \
  EmberEventControl emberAfIdentifyClusterServerTickCallbackControl11; \
  EmberEventControl emberAfTimeClusterServerTickCallbackControl11; \
  EmberEventControl emberAfIdentifyClusterServerTickCallbackControl20; \
  EmberEventControl emberAfTimeClusterServerTickCallbackControl20; \
  EmberEventControl emberAfOccupancySensingClusterServerTickCallbackControl20; \
  EmberEventControl emberAfIdentifyClusterServerTickCallbackControl21; \
  EmberEventControl emberAfTimeClusterServerTickCallbackControl21; \
  extern EmberEventControl emberAfPluginEnceliumCommissioningCleanupEventControl; \
  extern EmberEventControl emberAfPluginEnceliumCommissioningNetworkFindEventControl; \
  extern EmberEventControl emberAfPluginEnceliumDiagnosticsTickEventControl; \
  extern EmberEventControl emberAfPluginEnceliumRestartMessageSendNetworkLostEventControl; \
  extern EmberEventControl emberAfPluginEnceliumRestartMessageTimerEventControl; \
  extern EmberEventControl emberAfPluginEnceliumSwTimerTickEventControl; \
  extern EmberEventControl emberAfPluginOsramdsReset2factoryPeriodicEventControl; \
  extern EmberEventControl emberAfPluginOsramdsUserinterfaceTickEventControl; \
  extern EmberEventControl emberAfPluginOtaStorageSimpleEepromPageEraseEventControl; \
  extern EmberEventControl emberAfPluginReportingTickEventControl; \
  extern EmberEventControl tempTransitionEventControl; \
  extern void emberAfPluginEnceliumCommissioningCleanupEventHandler(void); \
  extern void emberAfPluginEnceliumCommissioningNetworkFindEventHandler(void); \
  extern void emberAfPluginEnceliumDiagnosticsTickEventHandler(void); \
  extern void emberAfPluginEnceliumRestartMessageSendNetworkLostEventHandler(void); \
  extern void emberAfPluginEnceliumRestartMessageTimerEventHandler(void); \
  extern void emberAfPluginEnceliumSwTimerTickEventHandler(void); \
  extern void emberAfPluginOsramdsReset2factoryPeriodicEventHandler(void); \
  extern void emberAfPluginOsramdsUserinterfaceTickEventHandler(void); \
  extern void emberAfPluginOtaStorageSimpleEepromPageEraseEventHandler(void); \
  extern void emberAfPluginReportingTickEventHandler(void); \
  extern void tempTransitionEventHandler(void); \
  static void clusterTickWrapper(EmberEventControl *control, EmberAfTickFunction callback, uint8_t endpoint) \
  { \
    emberAfPushEndpointNetworkIndex(endpoint); \
    emberEventControlSetInactive(*control); \
    (*callback)(endpoint); \
    emberAfPopNetworkIndex(); \
  } \
  void emberAfIdentifyClusterServerTickCallbackWrapperFunction1(void) { clusterTickWrapper(&emberAfIdentifyClusterServerTickCallbackControl1, emberAfIdentifyClusterServerTickCallback, 1); } \
  void emberAfTimeClusterServerTickCallbackWrapperFunction1(void) { clusterTickWrapper(&emberAfTimeClusterServerTickCallbackControl1, emberAfTimeClusterServerTickCallback, 1); } \
  void emberAfOtaBootloadClusterClientTickCallbackWrapperFunction1(void) { clusterTickWrapper(&emberAfOtaBootloadClusterClientTickCallbackControl1, emberAfOtaBootloadClusterClientTickCallback, 1); } \
  void emberAfIdentifyClusterServerTickCallbackWrapperFunction2(void) { clusterTickWrapper(&emberAfIdentifyClusterServerTickCallbackControl2, emberAfIdentifyClusterServerTickCallback, 2); } \
  void emberAfIdentifyClusterServerTickCallbackWrapperFunction10(void) { clusterTickWrapper(&emberAfIdentifyClusterServerTickCallbackControl10, emberAfIdentifyClusterServerTickCallback, 10); } \
  void emberAfTimeClusterServerTickCallbackWrapperFunction10(void) { clusterTickWrapper(&emberAfTimeClusterServerTickCallbackControl10, emberAfTimeClusterServerTickCallback, 10); } \
  void emberAfIdentifyClusterServerTickCallbackWrapperFunction11(void) { clusterTickWrapper(&emberAfIdentifyClusterServerTickCallbackControl11, emberAfIdentifyClusterServerTickCallback, 11); } \
  void emberAfTimeClusterServerTickCallbackWrapperFunction11(void) { clusterTickWrapper(&emberAfTimeClusterServerTickCallbackControl11, emberAfTimeClusterServerTickCallback, 11); } \
  void emberAfIdentifyClusterServerTickCallbackWrapperFunction20(void) { clusterTickWrapper(&emberAfIdentifyClusterServerTickCallbackControl20, emberAfIdentifyClusterServerTickCallback, 20); } \
  void emberAfTimeClusterServerTickCallbackWrapperFunction20(void) { clusterTickWrapper(&emberAfTimeClusterServerTickCallbackControl20, emberAfTimeClusterServerTickCallback, 20); } \
  void emberAfOccupancySensingClusterServerTickCallbackWrapperFunction20(void) { clusterTickWrapper(&emberAfOccupancySensingClusterServerTickCallbackControl20, emberAfOccupancySensingClusterServerTickCallback, 20); } \
  void emberAfIdentifyClusterServerTickCallbackWrapperFunction21(void) { clusterTickWrapper(&emberAfIdentifyClusterServerTickCallbackControl21, emberAfIdentifyClusterServerTickCallback, 21); } \
  void emberAfTimeClusterServerTickCallbackWrapperFunction21(void) { clusterTickWrapper(&emberAfTimeClusterServerTickCallbackControl21, emberAfTimeClusterServerTickCallback, 21); } \


// EmberEventData structs used to populate the EmberEventData table
#define EMBER_AF_GENERATED_EVENTS   \
  { &emberAfIdentifyClusterServerTickCallbackControl1, emberAfIdentifyClusterServerTickCallbackWrapperFunction1 }, \
  { &emberAfTimeClusterServerTickCallbackControl1, emberAfTimeClusterServerTickCallbackWrapperFunction1 }, \
  { &emberAfOtaBootloadClusterClientTickCallbackControl1, emberAfOtaBootloadClusterClientTickCallbackWrapperFunction1 }, \
  { &emberAfIdentifyClusterServerTickCallbackControl2, emberAfIdentifyClusterServerTickCallbackWrapperFunction2 }, \
  { &emberAfIdentifyClusterServerTickCallbackControl10, emberAfIdentifyClusterServerTickCallbackWrapperFunction10 }, \
  { &emberAfTimeClusterServerTickCallbackControl10, emberAfTimeClusterServerTickCallbackWrapperFunction10 }, \
  { &emberAfIdentifyClusterServerTickCallbackControl11, emberAfIdentifyClusterServerTickCallbackWrapperFunction11 }, \
  { &emberAfTimeClusterServerTickCallbackControl11, emberAfTimeClusterServerTickCallbackWrapperFunction11 }, \
  { &emberAfIdentifyClusterServerTickCallbackControl20, emberAfIdentifyClusterServerTickCallbackWrapperFunction20 }, \
  { &emberAfTimeClusterServerTickCallbackControl20, emberAfTimeClusterServerTickCallbackWrapperFunction20 }, \
  { &emberAfOccupancySensingClusterServerTickCallbackControl20, emberAfOccupancySensingClusterServerTickCallbackWrapperFunction20 }, \
  { &emberAfIdentifyClusterServerTickCallbackControl21, emberAfIdentifyClusterServerTickCallbackWrapperFunction21 }, \
  { &emberAfTimeClusterServerTickCallbackControl21, emberAfTimeClusterServerTickCallbackWrapperFunction21 }, \
  { &emberAfPluginEnceliumCommissioningCleanupEventControl, emberAfPluginEnceliumCommissioningCleanupEventHandler }, \
  { &emberAfPluginEnceliumCommissioningNetworkFindEventControl, emberAfPluginEnceliumCommissioningNetworkFindEventHandler }, \
  { &emberAfPluginEnceliumDiagnosticsTickEventControl, emberAfPluginEnceliumDiagnosticsTickEventHandler }, \
  { &emberAfPluginEnceliumRestartMessageSendNetworkLostEventControl, emberAfPluginEnceliumRestartMessageSendNetworkLostEventHandler }, \
  { &emberAfPluginEnceliumRestartMessageTimerEventControl, emberAfPluginEnceliumRestartMessageTimerEventHandler }, \
  { &emberAfPluginEnceliumSwTimerTickEventControl, emberAfPluginEnceliumSwTimerTickEventHandler }, \
  { &emberAfPluginOsramdsReset2factoryPeriodicEventControl, emberAfPluginOsramdsReset2factoryPeriodicEventHandler }, \
  { &emberAfPluginOsramdsUserinterfaceTickEventControl, emberAfPluginOsramdsUserinterfaceTickEventHandler }, \
  { &emberAfPluginOtaStorageSimpleEepromPageEraseEventControl, emberAfPluginOtaStorageSimpleEepromPageEraseEventHandler }, \
  { &emberAfPluginReportingTickEventControl, emberAfPluginReportingTickEventHandler }, \
  { &tempTransitionEventControl, tempTransitionEventHandler }, \


#define EMBER_AF_GENERATED_EVENT_STRINGS   \
  "Identify Cluster Server EP 1",  \
  "Time Cluster Server EP 1",  \
  "Over the Air Bootloading Cluster Client EP 1",  \
  "Identify Cluster Server EP 2",  \
  "Identify Cluster Server EP 10",  \
  "Time Cluster Server EP 10",  \
  "Identify Cluster Server EP 11",  \
  "Time Cluster Server EP 11",  \
  "Identify Cluster Server EP 20",  \
  "Time Cluster Server EP 20",  \
  "Occupancy Sensing Cluster Server EP 20",  \
  "Identify Cluster Server EP 21",  \
  "Time Cluster Server EP 21",  \
  "Encelium Commissioning v2 Plugin Cleanup",  \
  "Encelium Commissioning v2 Plugin NetworkFind",  \
  "Encelium Diagnostics v2 Plugin Tick",  \
  "Encelium Restart Message Plugin SendNetworkLost",  \
  "Encelium Restart Message Plugin Timer",  \
  "Encelium Software Timer Plugin Tick",  \
  "OsramDS Reset2Factory Plugin Periodic",  \
  "OsramDS UserInterface Plugin Tick",  \
  "OTA Simple Storage EEPROM Driver Plugin PageErase",  \
  "Reporting Plugin Tick",  \
  "Temp transition event control",  \


// The length of the event context table used to track and retrieve cluster events
#define EMBER_AF_EVENT_CONTEXT_LENGTH 13

// EmberAfEventContext structs used to populate the EmberAfEventContext table
#define EMBER_AF_GENERATED_EVENT_CONTEXT { 0x1, 0x3, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfIdentifyClusterServerTickCallbackControl1}, \
{ 0x1, 0xa, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfTimeClusterServerTickCallbackControl1}, \
{ 0x1, 0x19, true, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfOtaBootloadClusterClientTickCallbackControl1}, \
{ 0x2, 0x3, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfIdentifyClusterServerTickCallbackControl2}, \
{ 0xa, 0x3, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfIdentifyClusterServerTickCallbackControl10}, \
{ 0xa, 0xa, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfTimeClusterServerTickCallbackControl10}, \
{ 0xb, 0x3, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfIdentifyClusterServerTickCallbackControl11}, \
{ 0xb, 0xa, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfTimeClusterServerTickCallbackControl11}, \
{ 0x14, 0x3, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfIdentifyClusterServerTickCallbackControl20}, \
{ 0x14, 0xa, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfTimeClusterServerTickCallbackControl20}, \
{ 0x14, 0x406, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfOccupancySensingClusterServerTickCallbackControl20}, \
{ 0x15, 0x3, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfIdentifyClusterServerTickCallbackControl21}, \
{ 0x15, 0xa, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfTimeClusterServerTickCallbackControl21}


#endif // __AF_GEN_EVENT__
